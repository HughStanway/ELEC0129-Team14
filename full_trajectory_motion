x0_1 = -100;
xf_1 = -140;

x0_2 = -140;
xf_2 = -100;

% Time array
tf = 5;
t = 0:0.1:tf;
t = t';

% Function x for forward movement
X0 = x0_1;
X1 = 0;
X2 = 3/tf^2 * (xf_1 - x0_1);
X3 = -2/tf^3 * (xf_1 - x0_1);
Xcubic_f = X0*ones(length(t),1) + X1*t + X2*t.^2 + X3*t.^3;
Xdotcubit_f = X1 + 2*X2*t + 3*X3*t.^2;
XDoublecubic_f = 2*X2 + 6*X3*t;

% Function x for reverse movement
X0 = x0_2;
X1 = 0;
X2 = 3/tf^2 * (xf_2 - x0_2);
X3 = -2/tf^3 * (xf_2 - x0_2);
Xcubic_r = X0*ones(length(t),1) + X1*t + X2*t.^2 + X3*t.^3;
Xdotcubit_r = X1 + 2*X2*t + 3*X3*t.^2;
XDoublecubic_r = 2*X2 + 6*X3*t;

% Merged graph with a 10-second delay
tmerge = 0:0.1:30.1; % Adjusted time array with a 10-second delay
delay_steps = 10 / 0.1; % Number of time steps to delay

vector_neg100_delayed = -100 * ones(delay_steps, 1); % Delayed position
vector_neg140_reverse = -140 * ones(100, 1);
vector_neg100_reverse = -100 * ones(100, 1);
combined_Xcubic = [vector_neg100_delayed; Xcubic_f; vector_neg140_reverse; Xcubic_r];
combined_Xdotcubuc = [zeros(delay_steps, 1); Xdotcubit_f; vector_neg100_reverse; Xdotcubit_r];
combined_XDoublecubuc = [zeros(delay_steps, 1); XDoublecubic_f; vector_neg100_reverse; XDoublecubic_r];

% Plotting
subplot(1,3,1), plot(tmerge, combined_Xcubic), title('Position')
xlabel('Time, seconds')
ylabel('Degrees')
subplot(1,3,2), plot(tmerge, combined_Xdotcubuc), title('Velocity')
xlabel('Time, seconds')
ylabel('Degrees/sec')
subplot(1,3,3), plot(tmerge, combined_XDoublecubuc), title('Acceleration')
xlabel('Time, seconds')
ylabel('Degrees/sec^2')
